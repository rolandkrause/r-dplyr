---
title: "My answers"
author: "My name"
date: "2023-10-11"
output: html_document
---




## Part one - Wrangling

This short tutorial will allow you to explore `dplyr` functionality based on the previous lecture. Every question can be answered with a combination of `|>` pipes. You should refrain from using temporary variables and statements outside of the range of the tidyverse.  

The first part does not require joins or pivots.

### Import the [data from the website](https://biostat2.uni.lu/practicals/data/judgments.tsv). 
Assign to the name `judgments`

```{r}
# Write your answer here
```


### Use `glimpse()` to identify columns and column types.

What are the dimensions of the data set.


### Exercise 1 

You can combine the following tasks into a single statement.

#### Select columns
Select `gender`, `subject`, `age` and referring to the `STAI` questionnaire.

```{r}
# Write your answer here
```


#### Select all subjects with `STAI_pre` greater than 65 and `STAI_post` greater than 40

```{r}
# Write your answer here
```


#### Sort the observations by `STAI_pre` so that the subject with the highest score is on top.

```{r}
# Write your answer here
```

#### For better readability, move the subject, STAI_pre and STAI_post columns to the first positions.

```{r}
# Write your answer here
```

### Exercise 2

#### Abbreviate the gender column such that only the first character remains

```{r}
# Write your answer here
```


#### Create a new column called `STAI_pre_category` 

It should contain "low", "normal" and "high" entries depending on the `STAI_pre` values:

  * if `STAI_pre` is less than `25` assign "low",
  
  * if `STAI_pre` is over `65` assign "high",
  
  * for all other values assign "normal".

#### Arrange the table by `STAI_pre` in a descending manner.

```{r}
# Write your answer here
```


### Display distinct values in `STAI_pre` and `STAI_pre_category`.

```{r}
# Write your answer here
```


##### Normalize the values in the REI group
Divide all entries in the REI questionnaire by 5, the maximal value.

```{r}
# Write your answer here
```


##### Compute the average and the standard deviation for all moral dilemma columns. 
The resulting column names must contain the names of "avg" (for the average) and "sd" for the standard deviation. 

```{r}
# Write your answer here
```


### Grouping

#### Sort by groups

Find the number of subjects by age, gender and condition, e.g. how many 20 years of age females are in the `stress` group. 
Sort the resulting tibble such that the condition that contains the most populous group is sorted first (i.e. `stress` or `control` appear together). 

```{r}
# Write your answer here
```


##### Find the moral dilemma with the highest average score across all participants.

The result must be a tibble containing the dilemma and the average such that the dilemma with the highest average in the first row. 

```{r}
# Write your answer here
```



